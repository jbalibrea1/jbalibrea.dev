name: CI/CD - Build, Push, Deploy 🐳

on:
  push:
    branches:
      - main
      - feat/*
      - chore/*
      - refactor/*

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout repo
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - run: echo "🔐 Successfully logged in to GitHub Container Registry."

      - name: Build Docker image
        run: |
          docker build --build-arg PUBLIC_RECAPTCHA_KEY=${{ secrets.PUBLIC_RECAPTCHA_KEY }} \
            -t ghcr.io/${{ github.repository_owner }}/jbalibreadev-web:latest .
          echo "🐳 Docker image built successfully."

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/jbalibreadev-web:latest
          echo "🚀 Docker image pushed to GitHub Container Registry."

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            cd ${{ secrets.VPS_PROJECT_PATH }}
            docker-compose pull
            docker-compose up -d --force-recreate
            echo "✅ Deployment completed successfully on the VPS."
