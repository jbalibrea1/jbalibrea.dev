---
const { post } = Astro.props;
const maxChars = 200;
const truncatedDescription =
  post.data.description.length > maxChars
    ? post.data.description.substring(0, maxChars) + '...'
    : post.data.description;
---

<div
  class="flex flex-col bg-white border shadow-sm rounded-xl dark:bg-neutral-900 dark:border-neutral-700 dark:shadow-neutral-700/70 overflow-hidden"
>
  <a href={`/posts/${post.slug}/`}>
    <img
      class="w-full h-32 rounded-t-xl max-h-44 object-cover transition duration-300 ease-in-out scale-105 hover:scale-100 opacity:100 hover:opacity-90"
      src={post.data.image.url}
      alt={post.data.image.alt}
      transition:name={`img-${post.data.image.url}`}
    />
  </a>
  <div class="p-4 md:p-5 flex flex-col justify-between flex-1">
    <div>
      <h3
        class="dark:text-slate-200 text-xl font-bold tracking-tight transition duration-75 hover:text-pink-700 dark:hover:text-pink-700"
      >
        <a
          href={`/posts/${post.slug}/`}
          class="group-a inline-flex items-center max-w-fit justify-start transition ease-in-out hover:scale-105 underline decoration-dotted opacity-90 hover:opacity-100"
          transition:name={`title-${post.data.title}`}
        >
          {post.data.title}
          <svg
            class="w-3 h-3 ms-2 mb-2 transition ease-in-out -rotate-45 group-a-hover:scale-x-110"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="currentColor"
            viewBox="0 0 14 10"
          >
            <path
              stroke="currentColor"
              stroke-line-cap="round"
              stroke-line-join="round"
              stroke-width="2"
              d="M1 5h12m0 0L9 1m4 4L9 9"></path>
          </svg>
        </a>
      </h3>
      <p
        class="mt-1 text-gray-800 dark:text-slate-200 text-md"
        transition:name={`desc-${post.data.description}`}
      >
        {truncatedDescription}
      </p>
    </div>
    <div class="flex items-start justify-between gap-2 mt-4">
      <span class="flex flex-wrap gap-1">
        {
          post.data.tags.map((tag) => (
            <a
              href={`/tags/${tag}/`}
              class="text-xs bg-gray-200 dark:bg-neutral-800 text-gray-700 dark:text-slate-300 px-2 py-1 rounded-full mr-2 hover:bg-gray-300 dark:hover:bg-neutral-700 transition duration-75 ease-in-out"
            >
              {tag}
            </a>
          ))
        }
      </span>
      <time
        datetime={post.data.pubDate.toISOString()}
        class="text-gray-500 dark:text-slate-400 text-sm flex-shrink-0"
      >
        {
          post.data.pubDate.toLocaleDateString('es-es', {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
          })
        }
      </time>
    </div>
  </div>
</div>
